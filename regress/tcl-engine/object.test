#!/bin/sh
. ${0%${0##*/}}../test.sh

# .gen test file
cat >run.gen <<EOF
struct s {
  long a;
  struct ss {
    long c;
  } b[2];
};
EOF
mkdir -p run.t


# --- object foreach -------------------------------------------------------
#
testing '[$type foreach]'

# basic recursion
run 0 ${GENOM_BIN} interactive -b run.gen <<'EOF'
set i 0
[dotgen type ::s] foreach {t k} {
  puts -nonewline "$i,$k,"
  catch { puts -nonewline [$t fullname] }
  puts ","
  incr i
}
EOF
expect out '
	/^0,struct,::s,$/ {next}
	/^1,struct member,::s::a,$/ {next}
	/^2,long,,$/ {next}
	/^3,\/struct member,::s::a,$/ {next}
	/^4,struct member,::s::b,$/ {next}
	/^5,array,,$/ {next}
	/^6,array element,,$/ {next}
	/^7,struct,::s::ss,$/ {next}
	/^8,struct member,::s::ss::c,$/ {next}
	/^9,long,,$/ {next}
	/^10,\/struct member,::s::ss::c,$/ {next}
	/^11,\/struct,::s::ss,$/ {next}
	/^12,\/array element,,$/ {next}
	/^13,\/array,,$/ {next}
	/^14,\/struct member,::s::b,$/ {next}
	/^15,\/struct,::s,$/ {next}
	{exit 2}
'

# recursion with hierarchy
run 0 ${GENOM_BIN} interactive -b run.gen <<'EOF'
set i 0
[dotgen type ::s] foreach {t k h} {
  puts "$i,$h,"
  incr i
}
EOF
expect out '
	/^0,,$/ {next}
	/^1,.a,$/ {next}
	/^2,.a,$/ {next}
	/^3,.a,$/ {next}
	/^4,.b,$/ {next}
	/^5,.b,$/ {next}
	/^6,.b,$/ {next}
	/^7,.b\[_genomi1\],$/ {next}
	/^8,.b\[_genomi1\].c,$/ {next}
	/^9,.b\[_genomi1\].c,$/ {next}
	/^10,.b\[_genomi1\].c,$/ {next}
	/^11,.b\[_genomi1\],$/ {next}
	/^12,.b,$/ {next}
	/^13,.b,$/ {next}
	/^14,.b,$/ {next}
	/^15,,$/ {next}
	{exit 2}
'
