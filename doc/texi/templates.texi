@c
@c Copyright (c) 2012 LAAS/CNRS
@c All rights reserved.
@c
@c Permission to use, copy, modify,  and distribute this software for any
@c purpose with or without fee is hereby granted, provided that the above
@c copyright notice and this permission notice appear in all copies.
@c
@c THE  SOFTWARE  IS  PROVIDED  "AS  IS" AND  THE  AUTHOR  DISCLAIMS  ALL
@c WARRANTIES  WITH  REGARD  TO   THIS  SOFTWARE  INCLUDING  ALL  IMPLIED
@c WARRANTIES  OF MERCHANTABILITY  AND  FITNESS. IN  NO  EVENT SHALL  THE
@c AUTHOR BE  LIABLE FOR ANY SPECIAL, DIRECT,  INDIRECT, OR CONSEQUENTIAL
@c DAMAGES OR ANY DAMAGES WHATSOEVER  RESULTING FROM LOSS OF USE, DATA OR
@c PROFITS,  WHETHER  IN  AN  ACTION  OF CONTRACT,  NEGLIGENCE  OR  OTHER
@c TORTIOUS  ACTION, ARISING  OUT OF  OR IN  CONNECTION WITH  THE  USE OR
@c PERFORMANCE OF THIS SOFTWARE.
@c
@c                                      Anthony Mallet on Sun May 20 2012
@c

Templates are the heart of the code generation system: they read a
@code{dotgen} specification and produce a bunch of source files from
it. Templates can produce virtually any kind of code, but they are
usually used to produce a server or a client implementation of the
component(s) described in the input specification.

A template is invoked on a @code{dotgen} specification by invoking
@genom{} with the template name followed by one or several input
files (@pxref{Running} for details).

A number of base templates are provided by @genom{}. These are the
@code{skeleton}, @code{mappings} and @code{interactive} templates
described hereafter. Additional templates can be made available by
installing extra packages. At the time of writing, there exist for
instance a @code{pocolibs} and a @code{ros} template that both provide
a server and several kind of clients implementations. The list of
available templates can be obtained by the command
@command{genom3@tie{}-l} (@pxref{General options}).

New templates can be developed by using the @code{TCL} code generator
engine (@pxref{Creating Templates}).

@menu
* Skeleton::		@htmd Creating initial codels skeleton
* Mappings::		@htmd Generating IDL mappings
* Interactive::		@htmd Running the TCL engine interactively
* Creating Templates::	@htmd Producing your own code
@end menu

@node Skeleton
@section Creating initial codels skeleton
@include skeleton.tmpl.texi

@node Mappings
@section Generating IDL mappings
@include mappings.tmpl.texi

@node Interactive
@section Running the TCL engine interactively
@include interactive.tmpl.texi

@include texi/tcl-engine.texi
