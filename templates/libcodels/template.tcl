#
# Copyright (c) 2010 LAAS/CNRS
# All rights reserved.
#
# Redistribution  and  use  in  source  and binary  forms,  with  or  without
# modification, are permitted provided that the following conditions are met:
#
#   1. Redistributions of  source  code must retain the  above copyright
#      notice and this list of conditions.
#   2. Redistributions in binary form must reproduce the above copyright
#      notice and  this list of  conditions in the  documentation and/or
#      other materials provided with the distribution.
#
# THE SOFTWARE  IS PROVIDED "AS IS"  AND THE AUTHOR  DISCLAIMS ALL WARRANTIES
# WITH  REGARD   TO  THIS  SOFTWARE  INCLUDING  ALL   IMPLIED  WARRANTIES  OF
# MERCHANTABILITY AND  FITNESS.  IN NO EVENT  SHALL THE AUTHOR  BE LIABLE FOR
# ANY  SPECIAL, DIRECT,  INDIRECT, OR  CONSEQUENTIAL DAMAGES  OR  ANY DAMAGES
# WHATSOEVER  RESULTING FROM  LOSS OF  USE, DATA  OR PROFITS,  WHETHER  IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR  OTHER TORTIOUS ACTION, ARISING OUT OF OR
# IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#                                           Anthony Mallet on Thu Jan 28 2010
#

# Standalone codel library generation.

template usage {*}{
    "\n"
    "Standalone codels library generation template.\n"
    "\n"
    "This template generates a standalone library from the codels files. This\n"
    "is useful only if you wish to link the codels with something else than\n"
    "a GenoM3 component. This template is not useful for building the GenoM3\n"
    "component running the codels itself.\n"
    "\n"
    "Supported options:\n"
    "  -C, --directory=dir\toutput files in dir instead of current directory\n"
    "  -p, --preserve\tdo not overwrite existing files\n"
    "  -h. --help\t\tprint usage summary (this text)"
}

# defaults
variable dir	{codels}
engine mode +overwrite +move-if-change

# parse options
template options {
    -C - --directory	{ engine chdir [template arg] }
    -p - --preserve	{ engine mode -overwrite }
    -h - --help		{ engine mode +verbose; puts [template usage]; exit 0 }
}

# relative path to user files
set userdir [file-relativize [dotgen input dir] [engine pwd]]

# generate types definitions
set header "Generated by [dotgen genom version]. Do not edit.\n"
append header "Source file: [dotgen input file]\n\n"
if {![catch {dotgen input notice} notice]} {
    append header "\n"
    append header $notice
}
foreach c [dotgen components] {
    set l [$c language]
    template parse					\
	raw [language comment $l $header]		\
	string [language mapping $l *]			\
	file "[$c name]_types[language fileext $l header]"
}

# setup build environment
template parse args $userdir file codels.Makefile.am file $dir/Makefile.am
buildenv autoconf subdir $dir
buildenv autoconf create
