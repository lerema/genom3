#include <BasicDataType.idl>

<?
# print all types except ids in idl format
for t in comp.typesVect():
    if t.identifier() != IDSType.identifier():
	print MapTypeToIdl(t) + ";"

for name,typeName in output_ports_map.iteritems():
  ?>
struct <!name!>OutStruct {
    long id;
    long res;
<?
  if typeName: ?>
    <!typeName!> data;
<?
  ?>
    RTC::Time tm;
};

<?
for port in outports:
  ?>
struct <!port.name!>Struct {
  RTC::Time tm;
  <!MapTypeToIdl(port.idlType)!> data;
};
<?
?>

<?
for port in inports:
  ?>
struct <!port.name!>Struct {
  RTC::Time tm;
  <!MapTypeToIdl(port.idlType)!> data;
};
<?
?>

<?
for e in errorList: ?>
exception <!e!> {};
<?
?>

<?
?>
interface I<!capCompName!>
{
<?
for s in servicesMap:
  print "   " + service_idl_signature(s.data())
?>};
