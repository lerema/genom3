/*
 * Copyright (c) 2012 LAAS/CNRS
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any purpose
 * with or without   fee is hereby granted, provided   that the above  copyright
 * notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS  SOFTWARE INCLUDING ALL  IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR  BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR  ANY DAMAGES WHATSOEVER RESULTING  FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION,   ARISING OUT OF OR IN    CONNECTION WITH THE USE   OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 *                                             Anthony Mallet on Thu May 24 2012
 */

interface genom {
  struct state {
    string<33> digest;
    string<31> date;
    string<32> version;
  };

  port out state genom_state;

  function abort_activity(in unsigned long activity) {
    doc: "Abort an activity";
  };

  function
  connect_port(in string<128> local =	:"Local input port",
               in string<128> remote =	:"Output port to connect to")
  {
    doc: "Connect two ports";
    codel: genom_connect_port_codel(service in local, service in remote);

    throw: no_such_inport, no_such_outport, port_io;
  };

  function
  connect_remote(in string<128> local =	:"Local remote name",
                 in string<128> remote =	:"Service to connect to")
  {
    doc: "Connect two remotes";
    codel: genom_connect_remote_codel(service in local, service in remote);

    throw: no_such_remote, no_such_service, remote_io;
  };
};
